# TEST Case
- name: Types
  input: |
    class tomi {
      byte aa;
      short bb;
      int cc;
      long dd;
      float ee;
      double ff;
      char gg;
      String hh, ii;
    }
  output: |
    class tomi {
      aa: number = 0;
      bb: number = 0;
      cc: number = 0;
      dd: number = 0;
      ee: number = 0;
      ff: number = 0;
      gg: string = null;
      hh: string = null;
      ii: string = null;
    }
  sourceMap: [0,1,2,3,4,5,6,7,8]

# TEST Case
- name: Parametrized types
  input: |
    class tomi {
      A a;
      A<B> a;
      A<B,C> a;
      A<B<C>> a;
      A<B[]> a;
    }
  output: |
    class tomi {
      a: A = null;
      a: A<B> = null;
      a: A<B,C> = null;
      a: A<B<C>> = null;
      a: A<B[]> = null;
    }

- name: Class > Properties > Accessors
  input: |
    class tomi {
      public A a;
      protected A a;
      private A a;
      final A a;
      static A a;
      static final A a;
    }
  output: |
    class tomi {
      public a: A = null;
      protected a: A = null;
      private a: A = null;
      static a: A = null;
      static a: A = null;
      static a: A = null;
    }

# TEST Case
- name: ArrayTypes
  input: |
    class tomi {
      int[] a;
      int[][] aa;
      String b[];
      String bb[][];
      T[] d[];
    }
  output: |
    class tomi {
      a: number[] = null;
      aa: number[][] = null;
      b: string[] = null;
      bb: string[][] = null;
      d: T[][] = null;
    }
  #sourceMap: [0,1,2,3,4,5,5,5]

# TEST Case
- name: Initialisers
  input: |
    class tomi {
      int a = 4;
      String b = "5";
      char c = '4';
      float d = 5.7f;
      double e = 7.8;
      double f = 0x56;
    }
  output: |
    class tomi {
      a: number = 4;
      b: string = "5";
      c: string = '4';
      d: number = 5.7;
      e: number = 7.8;
      f: number = 0x56;
    }

# TEST Case
- name: Types > Checks > string
  input: |
    class tomi {
      string a;
    }
  errors:
    - SymbolNotFound|1|string
