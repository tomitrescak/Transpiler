- name: Expressions > Simple Binary
  input: |
    class tomi {
      int a = 4 + 5;
    }
  output: |
    class tomi {
      a: number = 4 + 5;
    }
  sourceMap: [0,1]

- name: Expressions > Prefix Integer Division
  input: |
    class tomi {
      int b;
      int a = 4 / ++b;
    }
  output: |
    class tomi {
      b: number = 0;
      a: number = (4 / ++this.b|0);
    }

- name: Expressions > Prefix Double Division
  input: |
    class tomi {
      double b = 0;
      double a = 4 / ++b;
    }
  output: |
    class tomi {
      b: number = 0;
      a: number = 4 / ++this.b;
    }

- name: Expressions > Postfix Integer Division
  input: |
    class tomi {
      int b;
      int a = 4 / b++;
    }
  output: |
    class tomi {
      b: number = 0;
      a: number = (4 / this.b++|0);
    }

- name: Expressions > Logical and unary
  input: |
    class tomi {
      boolean b;
      boolean a = true && false || !b;
    }
  output: |
    class tomi {
      b: boolean = false;
      a: boolean = true && false || !this.b;
    }
  sourceMap: [0,1]

- name: Expressions > Parenthesis
  input: |
    class tomi {
      int a = ((4 + 5) * 2) / (4 * 5);
    }
  output: |
    class tomi {
      a: number = (((4 + 5) * 2) / (4 * 5)|0);
    }

- name: Expressions > Ternary
  input: |
    class tomi {
      int d() {
        return 1;
      }
      int a = true ? d() : 3;
    }
  output: |
    class tomi {
      d(): number {
        return 1;
      }
      a: number = true ? this.d() : 3;
    }
